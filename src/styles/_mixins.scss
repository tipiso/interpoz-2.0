
@mixin imgAnimation($animationName) {
  animation-name: $animationName;
  animation-duration: 3s;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: linear;
}

@mixin bgHeadingText($bgTextColor, $headingColor){
  $section-with-bg-height: clamp(600px, calc(45vw - 65px), 620px);
  $mobile-section-with-bg-height: clamp(300px, calc(45vw - 130px), 420px);

  padding-left: 24px;
  min-height: 141px;
  max-height: 141px;

  &__text-wrap {
    min-height: 141px;
    max-height: 141px;
    overflow: hidden;
    padding: 0;
  }

  &--background {
    position: absolute;
    padding-left: 24px;
    left: 0;
    right: 0;
    top: 0;
    z-index: 0;
    overflow: visible;

    .header__text {
      color: $bgTextColor;
    }
  }

  &__text {
    position: relative;
    top: -25px;
    z-index: 1;
    display: flex;
    flex-direction: column;
    font-size: 48px;
    color: $headingColor;
    line-height: 62.4px;
    margin: 0;
    font-weight: 500;
  }

  @media (min-width: $md){
    min-height: $mobile-section-with-bg-height;
    max-height: $mobile-section-with-bg-height;

    &__text-wrap {
      min-height: $mobile-section-with-bg-height;
      max-height: $mobile-section-with-bg-height;
    }

    &__text {
      min-height: $mobile-section-with-bg-height;
      max-height: $mobile-section-with-bg-height;
      top: -40px;
      font-size: $font-size-title;
      line-height: clamp(62.4px, 21vw, 125px);
    }
  }

  @media (min-width: $lg) {
    min-height: $section-with-bg-height;
    max-height: $section-with-bg-height;
    padding-left: 64px;

    &--background {
      padding-left: 64px;
    }

    &__text-wrap {
      min-height: $section-with-bg-height;
      max-height: $section-with-bg-height;
    }

    &__text {
      min-height: $section-with-bg-height;
      max-height: $section-with-bg-height;
      top: -104px;
      line-height: 265px;
    }
  }
}

@mixin viewport-unit($property, $value) {
  #{$property}: $value;

  $unit: unit($value);

  @if (index((vw, vh, vmin, vmax), $unit) != null) {
    $devices: (
                    (768px, 1024px), // iPad (all versions)
                    (320px, 480px),  // iPhone 4
                    (320px, 568px)   // iPhone 5, 5C, 5S
    );

    @each $device in $devices {
      $device-width: nth($device, 1);
      $device-height: nth($device, 2);

      $device-query: "only screen and (-webkit-min-device-pixel-ratio: 1)";
      $device-query: "#{$device-query} and (device-width: #{$device-width})";
      $device-query: "#{$device-query} and (device-height: #{$device-height})";

      $percent: $value / ($value * 0 + 1); // see https://github.com/sass/sass/issues/533

      $percent-width: $device-width * $percent / 100;
      $percent-height: $device-height * $percent / 100;

      @if ($unit == vmin or $unit == vmax) {
        @media #{$device-query} {
          #{$property}: if($unit == vmin, $percent-width, $percent-height);
        }
      }
      @else {
        @media #{$device-query} and (orientation: portrait) {
          #{$property}: if($unit == vw, $percent-width, $percent-height);
        }

        @media #{$device-query} and (orientation: landscape) {
          #{$property}: if($unit == vw, $percent-height, $percent-width);
        }
      }
    }
  }
}